# AUTOMATICALLY GENERATED
# DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/kubernetes.conf.erb

<match fluent.**>
  @type null
</match>
#added weave instead of *
<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/containers/weave*.log"
  pos_file "/var/log/fluentd-weave-containers.log.pos"
  tag "kubernetes.*"
  read_from_head true
  <parse>
    time_key logtime
    keep_time_key true
    time_format %Y/%m/%d %H:%M:%S.%N
    @type multiline
    format_firstline /^\W*\s*\S*:/
    format1 /^\W*\s*\S*:[\s]*"(?<severity>\w*)[\s]*:[\s]*(?<logtime>\d[^\s]*\s[^\s]*)(?<message>.*)/
  </parse>
</source>

 <source>
   @type tail
   path "/var/log/salt/minion"
   pos_file "/var/log/fluentd-salt.pos"
   tag "salt"
   <parse>
     time_format %Y-%m-%d %H:%M:%S
     @type regexp
     expression ^(?<time>[^ ]* [^ ,]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\] (?<message>.*)$
   </parse>
 </source>

<source>
  @type tail
  path "/var/log/startupscript.log"
  pos_file "/var/log/fluentd-startupscript.log.pos"
  tag "startupscript"
  <parse>
    @type syslog
  </parse>
</source>

<source>
  @type tail
  path "/var/log/docker.log"
  pos_file "/var/log/fluentd-docker.log.pos"
  tag "docker"
  <parse>
    @type regexp
    expression ^time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?
  </parse>
</source>

<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/containers/etcd-*.log"
  pos_file "/var/log/fluentd-etcd.log.pos"
  tag "kubernetes.*"
  <parse>
    @type multiline
    time_key logtime
    time_format %Y-%m-%d %H:%M:%S.%N
    keep_time_key true
    format_firstline /^\W*\s*\S*:\W*/
    format1 /^\W*\s*\S*:\W*(?<logtime>\d[^\s]*\s[^\s]*)\s(?<severity>\w)\s[/|]\s(?<source>[^\s]*[\:])[\s]*(?<message>.*)/
  </parse>
</source>

<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/kubelet.log"
  pos_file "/var/log/fluentd-kubelet.log.pos"
  tag "kubelet"
  <parse>
    @type kubernetes
    format_firstline /^\w\d{4}/
    format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
    time_format %m%d %H:%M:%S.%N
  </parse>
</source>

<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/containers/kube-proxy-*.log"
  pos_file "/var/log/fluentd-kube-proxy.log.pos"
  tag "kubernetes.*"
  <parse>
    time_key logtime
    keep_time_key true
    #<!-- inject_key_prefix kube-proxy. -->
    time_format %m%d %H:%M:%S.%N
    format_firstline /^\s*\S*\w*\W*\w\d{4}/
    @type multiline
    format1 /^\s*\S*\w*\W*(?<severity>\w)(?<logtime>\d{4}\s[^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\](?<message>.*)/
  </parse>
</source>
<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/containers/kube-apiserver-*.log"
  pos_file "/var/log/fluentd-kube-apiserver.log.pos"
  tag "kubernetes.*"
  # tag "Kubernetes.apiserver*"
  <parse>
    @type multiline
    time_key logtime
    time_format %m%d %H:%M:%S.%N
    keep_time_key true
    # inject_key_prefix kube-apiserver.
    format_firstline /^\s*\S*\w*\W*\w\d{4}/
    format1 /^\s*\S*\w*\W*(?<severity>\w)(?<logtime>\d{4}\s[^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\](?<message>.*[/\/n])\s*\W*\w*\W*(?<stream>\w*)\s*\W*\w*\W*(?<messagetime>[^\s]*Z)/
  </parse>
</source>
<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/containers/kube-controller-manager-*.log"
  pos_file "/var/log/fluentd-kube-controller-manager.log.pos"
  tag "kubernetes.*"
  <parse>
    @type multiline
    time_key logtime
    time_format %m%d %H:%M:%S.%N
    keep_time_key true
    format_firstline /^\s*\S*\w*\W*\w\d{4}/
    format1 /^\s*\S*\w*\W*(?<severity>\w)(?<logtime>\d{4}\s[^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\](?<message>.*)/
  </parse>
</source>
<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/containers/kube-scheduler-*.log"
  pos_file "/var/log/fluentd-kube-scheduler.log.pos"
  tag "kubernetes.*"
  <parse>
    @type multiline
    time_key logtime
    time_format %m%d %H:%M:%S.%N
    keep_time_key true
    format_firstline /^\s*\S*\w*\W*\w\d{4}/
    format1 /^\s*\S*\w*\W*(?<severity>\w)(?<logtime>\d{4}\s[^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\](?<message>.*)/
  </parse>
</source>
<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/rescheduler.log"
  pos_file "/var/log/fluentd-rescheduler.log.pos"
  tag "rescheduler"
  <parse>
    @type kubernetes
    format_firstline /^\w\d{4}/
    format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
    time_format %m%d %H:%M:%S.%N
  </parse>
</source>
<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/glbc.log"
  pos_file "/var/log/fluentd-glbc.log.pos"
  tag "glbc"
  <parse>
    @type kubernetes
    format_firstline /^\w\d{4}/
    format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
    time_format %m%d %H:%M:%S.%N
  </parse>
</source>
<source>
  @type tail
  multiline_flush_interval 5s
  path "/var/log/cluster-autoscaler.log"
  pos_file "/var/log/fluentd-cluster-autoscaler.log.pos"
  tag "cluster-autoscaler"
  <parse>
    @type kubernetes
    format_firstline /^\w\d{4}/
    format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
    time_format %m%d %H:%M:%S.%N
  </parse>
</source>

# Example:
# 2017-02-09T00:15:57.992775796Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" ip="104.132.1.72" method="GET" user="kubecfg" as="<self>" asgroups="<lookup>" namespace="default" uri="/api/v1/namespaces/default/pods"
# 2017-02-09T00:15:57.993528822Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" response="200"
<source>
  @type tail
  format multiline
  multiline_flush_interval 5s
  format_firstline /^\S+\s+AUDIT:/
  # Fields must be explicitly captured by name to be parsed into the record.
  # Fields may not always be present, and order may change, so this just looks
  # for a list of key="\"quoted\" value" pairs separated by spaces.
  # Unknown fields are ignored.
  # Note: We can't separate query/response lines as format1/format2 because
  #       they don't always come one after the other for a given query.
  format1 /^(?<logtime>\S+) AUDIT:(?: (?:id="(?<id>(?:[^"\\]|\\.)*)"|ip="(?<ip>(?:[^"\\]|\\.)*)"|method="(?<method>(?:[^"\\]|\\.)*)"|user="(?<user>(?:[^"\\]|\\.)*)"|groups="(?<groups>(?:[^"\\]|\\.)*)"|as="(?<as>(?:[^"\\]|\\.)*)"|asgroups="(?<asgroups>(?:[^"\\]|\\.)*)"|namespace="(?<namespace>(?:[^"\\]|\\.)*)"|uri="(?<uri>(?:[^"\\]|\\.)*)"|response="(?<response>(?:[^"\\]|\\.)*)"|\w+="(?:[^"\\]|\\.)*"))*/
  time_format %FT%T.%L%Z
  path /var/log/kubernetes/kube-apiserver-audit.log
  pos_file /var/log/kube-apiserver-audit.log.pos
  tag kube-apiserver-audit
</source>

<filter kubernetes.**>
  @type kubernetes_metadata
</filter>
# Map severity "I"  => "INFO","E" => "ERROR","W"  => "WARNING","D" => "DEBUG","T"  => "TRACE","F" => "FATAL"
<filter kubernetes.**>
  @type record_transformer
  enable_ruby
  <record>
    severity ${case record['severity'] when "I" then "INFO" when "E" then "ERROR" when "W" then "WARNING" when "D" then "DEBUG" when "T" then "TRACE" when "F" then "FATAL" else record['severity'] end}
  </record>
</filter>

#<filter kube.*>
#  @type record_transformer
#  enable_ruby
#  <record>
#    logtimeYear ${d = DateTime.parse(record['messagetime'])  end}
#  </record>
#</filter>


